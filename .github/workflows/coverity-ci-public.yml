# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Insecure Bank CI with Coverity on Public runner

on:
  push:
    branches: [ coverity-ci-public ]
  pull_request:
    branches: [ coverity-ci-public  ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      COVERITY_SERVER_URL: http://coverity.synopsys-alliances.com
      COVERITY_USER: gautam
      COVERITY_PASSPHRASE: ${{ secrets.COVERITY_PASSPHRASE }}
      COVERITY_VERSION: 2021.03
      COV: cov-analysis/cov-analysis-linux64-2021.03
      COVBIN: cov-analysis/cov-analysis-linux64-2021.03/bin
      COVERITY_STREAM: insecure-bank
      BLDCMD: mvn -B clean compile
      CHECKERS: --all --webapp-security

    steps:
    - uses: actions/checkout@v2
    - name: Cache Coverity Analysis
      id: coverity-cache
      uses: actions/cache@v2
      with:
        path: |
          cov-analysis/
        key: coverity-cache-ubuntu

    - name: Download Coverity
      if: steps.coverity-cache.outputs.cache-hit != 'true'
      run: |
          mkdir cov-analysis/
          cd cov-analysis/
          curl -k --user $COVERITY_USER:$COVERITY_PASSPHRASE -o license.dat $COVERITY_SERVER_URL/downloadFile.htm?fn=license.dat
          curl -k --user $COVERITY_USER:$COVERITY_PASSPHRASE $COVERITY_SERVER_URL/downloadFile.htm?fn=cov-analysis-linux64-${COVERITY_VERSION}.tar.gz | tar -xvf -
          cp license.dat cov-analysis-linux64-${COVERITY_VERSION}/bin/

    - name: Coverity BAC
      run: |
        rm -rf idir
        $COVBIN/cov-build --dir idir $BLDCMD
        $COVBIN/cov-analyze --dir idir --ticker-mode none --strip-path $PWD $CHECKERS
        $COVBIN/cov-commit-defects --dir idir --ticker-mode none --url $COVERITY_SERVER_URL --stream $COVERITY_STREAM --encryption none --user $COVERITY_USER --password $COVERITY_PASSPHRASE
        $COVBIN/cov-format-errors --dir idir --json-output-v7 coverity-results.json
        $COV/node/bin/node $COV/SARIF/cov-format-sarif-for-github.js --githubUrl https://github.com --inputFile coverity-results.json --outputFile coverity-results.sarif --repoName $GITHUB_REPOSITORY --checkoutPath $GITHUB_REPOSITORY $PWD $GITHUB_SHA
        
    - name: Upload SARIF file to GitHub UI
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: coverity-results.sarif
